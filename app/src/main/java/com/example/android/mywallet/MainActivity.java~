package com.example.android.mywallet;

import android.app.AlertDialog;
import android.content.ContentValues;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.provider.BaseColumns;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;

import org.w3c.dom.Text;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectOutputStream;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;



public class MainActivity extends AppCompatActivity {

    // 1 for main page
    // 2 for add page
    // 3 for spend page
    // 4 for summary page

    private int currentPage = 1;
    final public String summary_text = "";
    final int money_in_wallet = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        goToFirstPage();
    }

    @Override
    public void onBackPressed() {
        if (currentPage == 1) {
            new AlertDialog.Builder(this)
                    .setMessage("Are you sure you want to exit?")
                    .setCancelable(false)
                    .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int id) {
                            System.exit(0);
                        }
                    })
                    .setNegativeButton("No", null)
                    .show();
        }
        if (currentPage == 2) {
            goToFirstPage();
        }
        if (currentPage == 3) {
            goToFirstPage();
        }
        if (currentPage == 4) {
            goToFirstPage();
        }
    }

    public void goToFirstPage() {
	TextView textView = (TextView) findViewById(R.id.money_in_wallet);
        textView.setText("Rs." + money_in_wallet.toString() );
        setContentView(R.layout.activity_main);
        currentPage = 1;
    }

    public void goToSpendPage(View view) {
        setContentView(R.layout.spend_from_wallet_page);
        initiateCategoryList();
        currentPage = 3;
    }

    public void goToAddPage(View view) {
        setContentView(R.layout.add_to_wallet_page);
        currentPage = 2;
    }

    public void goToSummaryPage(View view) {
	updateSummary();
        setContentView(R.layout.wallet_spend_summary_page);
        currentPage = 4;
    }

    public void initiateCategoryList() {
        Spinner spinner = (Spinner) findViewById(R.id.category_spinner);
        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
                R.array.category_array, android.R.layout.simple_spinner_item);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner.setAdapter(adapter);
    }

    public void updateSummary() {
		TextView textView = (TextView) findViewById(R.id.summary_of_expenses);
        	textView.setText(summary_text);
    }
    public void saveMoney(String amount) {
		money_in_wallet += toint(amount);
    }
    public void deleteMoney(String amount, String category) {
		if(money_in_wallet-toint(amount) < 0) {
			Toast toast = Toast.makeText(this, "Cannot spend! Spend amount is bigger than the amount in wallet.", Toast.LENGTH_SHORT);
           		toast.show();
		}
		else
		money_in_wallet -= toint(amount);

		summary_text += "Spent " +  money_in_wallet.toString() + " on " + category + "\n";
		updateSummary();
		
    }
    public void clearSummary() {
		summary_text = "";
		updateSummary();
    }

    public void clearSummary(View view) {
        new AlertDialog.Builder(this)
                .setMessage("Are you sure you want to clear the summary?")
                .setCancelable(false)
                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        clearSummary();
                    }
                })
                .setNegativeButton("No", null)
                .show();
    }


    public void addAmount(View view) {
        final EditText input = (EditText) findViewById(R.id.amount_to_add);
        new AlertDialog.Builder(this)
                .setMessage("Are you sure you want to add Rs." + input.getText().toString() + " to your wallet?")
                .setCancelable(false)
                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        saveMoney(input.getText().toString());
                    }
                })
                .setNegativeButton("No", null)
                .show();

    }

    public void spendAmount(View view) {
        final EditText input = (EditText) findViewById(R.id.amount_to_spend);
        final Spinner spinner = (Spinner)findViewById(R.id.category_spinner);
        new AlertDialog.Builder(this)
                .setMessage("Are you sure you want to spend Rs." + input.getText().toString() + " on " + spinner.getSelectedItem().toString() + " from your wallet?")
                .setCancelable(false)
                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        deleteMoney(input.getText().toString(), spinner.getSelectedItem().toString());
                    }
                })
                .setNegativeButton("No", null)
                .show();

    }
}
